datasource db {
  provider = "mysql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  company      Company?      @relation(fields: [companyId], references: [id])
  companyId    String?
  createdAt    DateTime      @default(now())
  daySchedules DaySchedule[]
  firstName    String?
  id           String        @id @default(cuid())
  lastName     String?
  password     String
  roles        Json
  team         Team[]
  updatedAt    DateTime      @updatedAt
  username     String        @unique
}

model Company {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  name      String
  phone     String?
  teams     Team[]
  updatedAt DateTime @updatedAt
  users     User[]
}

model Team {
  company   Company? @relation(fields: [companyId], references: [id])
  companyId String?
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  name      String?
  updatedAt DateTime @updatedAt
  users     User[]
}

model DaySchedule {
  createdAt         DateTime           @default(now())
  date              DateTime?
  id                String             @id @default(cuid())
  intervals         Json?
  note              String?
  scheduleIntervals ScheduleInterval[]
  status            Status?            @relation(fields: [statusId], references: [id])
  statusId          String?
  updatedAt         DateTime           @updatedAt
  user              User?              @relation(fields: [userID], references: [id])
  userID            String?
}

model Status {
  createdAt    DateTime      @default(now())
  daySchedules DaySchedule[]
  id           String        @id @default(cuid())
  name         String?
  updatedAt    DateTime      @updatedAt
}

model ScheduleInterval {
  category      String?
  createdAt     DateTime     @default(now())
  daySchedule   DaySchedule? @relation(fields: [dayScheduleId], references: [id])
  dayScheduleId String?
  end           DateTime?
  id            String       @id @default(cuid())
  label         String?
  start         DateTime?
  updatedAt     DateTime     @updatedAt
}
